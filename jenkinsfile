pipeline {
    agent any
     tools{
        maven "MAVEN_3.9.6"
    }
    stages{
        stage('git'){
            steps{
            git url: 'https://github.com/spring-projects/spring-petclinic.git',
            branch: 'main'
            }
        }
        stage('build'){
            steps{
                sh "mvn clean package"
                junit testResults: '**/surefire-reports/*xml'
                archive '**/target/spring-petclinic*.jar'
            }
        }
        stage('SonarQube analysis') {
            steps{
                withSonarQubeEnv(credentialsId: 'sonar_cloud', installationName: 'sonarcloud') { 
                sh 'mvn org.sonarsource.scanner.maven:sonar-maven-plugin:3.11.0.3922:sonar -D sonar.organization=pruthviraj0077 -D sonar.projectKey=b9188e67e7dbbc42190a461762206ef32d8320f6'
    }
    } 
    }
        stage("Quality Gate") {
            steps {
              timeout(time: 1, unit: 'HOURS') {
                waitForQualityGate abortPipeline: true
              }
            }
          }
    
}

}





